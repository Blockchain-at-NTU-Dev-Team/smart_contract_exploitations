// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract Denial {
  address public partner; // withdrawal partner - pay the gas, split the withdraw
  address public owner;
  uint256 timeLastWithdrawn;
  mapping(address => uint256) withdrawPartnerBalances; // keep track of partners balances

  constructor() {
    owner = msg.sender;
  }

  function setWithdrawPartner(address _partner) public {
    partner = _partner;
  }

  // Withdraw 1% to recipient and 1% to owner
  function withdraw() public {
    uint256 amountToSend = address(this).balance / 100;
    (bool status, ) = partner.call{ value: amountToSend }("");
    status;
    payable(owner).transfer(amountToSend);
    timeLastWithdrawn = block.timestamp;
    withdrawPartnerBalances[partner] += amountToSend;
  }

  receive() external payable {}

  function contractBalance() public view returns (uint256) {
    return address(this).balance;
  }
}
